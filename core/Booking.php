<?php
	/* Generated by Wixnit Class Builder 
	// Apr, 27/2020
	// Building class for Booking
	*/

	class Booking
	{
		public $Id = "";
		public $Created = 0;
		public $Property = "";
		public $Checkin = 0;
		public $Checkout = 0;
		public $Coupons = array();
		public $Rooms = [];
		public $Adults = 0;
		public $Children = 0;
		public $Request = "";
		public $Total = 0;
		public $Discount = 0;
		public $Coupondiscount = 0;
		public $Paid = 0;
		public $Paidamount = 0.0;

		function __construct($arg=null)
		{
			if($arg != null)
			{
				$db = DB::GetDB();

				$res = $db->query("SELECT * FROM booking WHERE bookingid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['bookingid'];
					$this->Created = new WixDate($row['created']);
					$this->Property = new Property($row['property']);
					$this->Checkin = $row['checkin'];
					$this->Checkout = $row['checkout'];
					$this->Coupons = [];

					$c = json_decode($row['coupons']);
                    for($i = 0; $i < count($c); $i++)
                    {
                        $this->Coupons[$i] = new Coupon(new Subscriber($this->Property->Databasename, $this->Property->DatabaseUser, $this->Property->DatabasePassword));
                        $this->Coupons[$i]->Initialize($c[$i]);
                    }

					$this->Rooms = [];
                    $r = json_decode($row['rooms']);
                    for($i = 0; $i < count($r); $i++)
                    {
                        $this->Rooms[$i] = new Roombooking($r[$i]);
                    }

					$this->Adults = $row['adults'];
					$this->Children = $row['children'];
					$this->Request = $row['request'];
					$this->Total = $row['total'];
					$this->Discount = $row['discount'];
					$this->Coupondiscount = $row['coupondiscount'];
					$this->Paid = Convert::ToBool($row['paid']);
					$this->Paidamount = doubleval($row['paidamount']);
				}
			}
		}

		public function Save()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$created = time();
			$property = addslashes(is_a($this->Property, "Property") ? $this->Property->Id : $this->Property);
			$checkin = Convert::ToInt($this->Checkin);
			$checkout = Convert::ToInt($this->Checkout);
			$adults = Convert::ToInt($this->Adults);
			$children = Convert::ToInt($this->Children);
			$request = addslashes($this->Request);
			$total = floatval($this->Total);
			$discount = floatval($this->Discount);
			$coupondiscount = floatval($this->Coupondiscount);

			$paid = Convert::ToInt($this->Paid);
			$paidamount = doubleval($this->Paidamount);


            $c = [];
            for($i = 0; $i < count($this->Coupons); $i)
            {
                array_push($c, (is_a($this->Coupons[$i], "Coupon") ? $this->Coupons[$i]->Id : $this->Coupons[$i]));
            }
            $coupons = addslashes(json_encode($c));


            $r = [];
            for($i = 0; $i < count($this->Rooms); $i++)
            {
                array_push($r, (is_a($this->Rooms[$i], "Roombooking") ? $this->Rooms[$i]->Id : $this->Rooms[$i]));
            }
            $rooms = addslashes(json_encode($r));


            if($res = $db->query("SELECT bookingid FROM booking WHERE bookingid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE booking SET property='$property',checkin='$checkin',checkout='$checkout',coupons='$coupons',rooms='$rooms',adults='$adults',children='$children',request='$request',total='$total',discount='$discount',coupondiscount='$coupondiscount',paid='$paid',paidamount='$paidamount' WHERE bookingid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT bookingid FROM booking WHERE bookingid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO booking(bookingid,created,property,checkin,checkout,coupons,rooms,adults,children,request,total,discount,coupondiscount,paid,paidamount) VALUES ('$id','$created','$property','$checkin','$checkout','$coupons','$rooms','$adults','$children','$request','$total','$discount','$coupondiscount','$paid','$paidamount')");
			}
		}

		public function Delete()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM booking WHERE bookingid='$id'");

			//Deleting Associated Objects
			/*n			$this->Property->Delete();

			$this->Coupons->Delete();

			$this->Rooms->Delete();
			*/
		}

		public static function Search($term='')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT bookingid FROM booking WHERE property LIKE '%$term%' OR checkin LIKE '%$term%' OR checkout LIKE '%$term%' OR coupons LIKE '%$term%' OR rooms LIKE '%$term%' OR adults LIKE '%$term%' OR children LIKE '%$term%' OR request LIKE '%$term%' OR total LIKE '%$term%' OR discount LIKE '%$term%' OR coupondiscount LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Booking($row['bookingid']);
				$i++;
			}
			return $ret;
		}

		public static function Filter($term='', $field='bookingid')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT bookingid FROM booking WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Booking($row['bookingid']);
				$i++;
			}
			return $ret;
		}

		public static function Order($field='id', $order='DESC')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT bookingid FROM booking ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Booking($row['bookingid']);
				$i++;
			}
			return $ret;
		}

		public static function All()
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM booking");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Booking();
				$ret[$i]->Id = $row['bookingid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Property = new Property($row['property']);
				$ret[$i]->Checkin = $row['checkin'];
				$ret[$i]->Checkout = $row['checkout'];
				$ret[$i]->Coupons = [];
				$ret[$i]->Rooms = [];
				$ret[$i]->Adults = $row['adults'];
				$ret[$i]->Children = $row['children'];
				$ret[$i]->Request = $row['request'];
				$ret[$i]->Total = $row['total'];
				$ret[$i]->Discount = $row['discount'];
				$ret[$i]->Coupondiscount = $row['coupondiscount'];
				$ret[$i]->Paid = Convert::ToBool($row['paid']);
				$ret[$i]->Paidamount = Convert::ToBool($row['paidamount']);

                $ret[$i]->Coupons = [];
                $c = json_decode($row['coupons']);
                for($i = 0; $i < count($c); $i++)
                {
                    $ret[$i]->Coupons[$i] = new Coupon(new Subscriber($ret[$i]->Property->Databasename, $ret[$i]->Property->DatabaseUser, $ret[$i]->Property->DatabasePassword));
                    $ret[$i]->Coupons[$i]->Initialize($c[$i]);
                }

                $ret[$i]->Rooms = [];
                $r = json_decode($row['rooms']);
                for($i = 0; $i < count($r); $i++)
                {
                    $ret[$i]->Rooms[$i] = new Roombooking($r[$i]);
                }
				$i++;
			}
			return $ret;
		}
	}
