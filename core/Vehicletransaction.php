<?php
	/* Generated by Wixnit Class Builder 
	// May, 14/2020
	// Building class for Vehicletransaction
	*/

	class Vehicletransaction
	{
		public $Id = "";
		public $Created = 0;
		public $Property = "";
		public $Owner = "";
		public $Amount = 0;
		public $Paid = 0;
		public $Status = false;
		public $Paydate = 0;

		function __construct($arg=null)
		{
			if($arg != null)
			{
				$db = DB::GetDB();

				$res = $db->query("SELECT * FROM vehicletransaction WHERE vehicletransactionid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['vehicletransactionid'];
					$this->Created = new WixDate($row['created']);
					$this->Property = new Property($row['property']);
					$this->Owner = new Customer($row['owner']);
					$this->Amount = $row['amount'];
					$this->Paid = $row['paid'];
					$this->Status = Convert::ToBool($row['status']);
					$this->Paydate = $row['paydate'];
				}
			}
		}

		public function Save()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$created = time();
			$property = addslashes(is_a($this->Property, "Property") ? $this->Property->Id : $this->Property);
			$owner = addslashes(is_a($this->Owner, "Customer") ? $this->Owner->Id : $this->Owner);
			$amount = floatval($this->Amount);
			$paid = floatval($this->Paid);
			$status = Convert::ToInt($this->Status);
			$paydate = Convert::ToInt($this->Paydate);

			if($res = $db->query("SELECT vehicletransactionid FROM vehicletransaction WHERE vehicletransactionid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE vehicletransaction SET property='$property',owner='$owner',amount='$amount',paid='$paid',status='$status',paydate='$paydate' WHERE vehicletransactionid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT vehicletransactionid FROM vehicletransaction WHERE vehicletransactionid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO vehicletransaction(vehicletransactionid,created,property,owner,amount,paid,status,paydate) VALUES ('$id','$created','$property','$owner','$amount','$paid','$status','$paydate')");
			}
		}

		public function Delete()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM vehicletransaction WHERE vehicletransactionid='$id'");

			//Deleting Associated Objects
			/*n			$this->Property->Delete();

			$this->Owner->Delete();
			*/
		}

		public static function Search($term='')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT vehicletransactionid FROM vehicletransaction WHERE property LIKE '%$term%' OR owner LIKE '%$term%' OR amount LIKE '%$term%' OR paid LIKE '%$term%' OR status LIKE '%$term%' OR paydate LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Vehicletransaction($row['vehicletransactionid']);
				$i++;
			}
			return $ret;
		}

		public static function Filter($term='', $field='vehicletransactionid')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT vehicletransactionid FROM vehicletransaction WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Vehicletransaction($row['vehicletransactionid']);
				$i++;
			}
			return $ret;
		}

		public static function Order($field='id', $order='DESC')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT vehicletransactionid FROM vehicletransaction ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Vehicletransaction($row['vehicletransactionid']);
				$i++;
			}
			return $ret;
		}

		public static function All()
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM vehicletransaction");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Vehicletransaction();
				$ret[$i]->Id = $row['vehicletransactionid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Property = new Property($row['property']);
				$ret[$i]->Owner = new Customer($row['owner']);
				$ret[$i]->Amount = $row['amount'];
				$ret[$i]->Paid = $row['paid'];
				$ret[$i]->Status = Convert::ToBool($row['status']);
				$ret[$i]->Paydate = $row['paydate'];
				$i++;
			}
			return $ret;
		}

        public static function spanTransaction($month, $year, $property)
        {
            $db = DB::GetDB();
            $ret = array();
            $i = 0;

            $start = strtotime(strval($month)."/1/".strval($year));
            $stop = $start + ((60 * 60) * 24) * Convert::daysInMonth($month, $year);
            $id = is_a($property, "Property") ? $property->Id : $property;

            $res = $db->query("SELECT * FROM vehicletransaction WHERE created>='$start' AND created <= '$stop' AND property='$id'");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Propertytransaction();
                $ret[$i]->Id = $row['propertytransactionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Property = new Property($row['property']);
                $ret[$i]->Owner = new Customer($row['owner']);
                $ret[$i]->Amount = $row['amount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Status = Convert::ToBool($row['status']);
                $ret[$i]->Paydate = new WixDate($row['paydate']);
                $i++;
            }
            return $ret;
        }

        public static function byUser($customer)
        {
            $db = DB::GetDB();
            $ret = array();
            $i = 0;

            $id = is_a($customer, "Customer") ? $customer->Id : $customer;

            $res = $db->query("SELECT * FROM vehicletransaction WHERE owner='$id'");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Propertytransaction();
                $ret[$i]->Id = $row['propertytransactionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Property = new Property($row['property']);
                $ret[$i]->Owner = new Customer($row['owner']);
                $ret[$i]->Amount = $row['amount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Status = Convert::ToBool($row['status']);
                $ret[$i]->Paydate = new WixDate($row['paydate']);
                $i++;
            }
            return $ret;
        }
	}
